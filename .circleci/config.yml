#Comment to trigger commit
version: 2

jobs:
  run_tests:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Super-Linter
          uses: github/super-linter@v3.14.0
      - run:
          name: Install npm dependencies
          command: |
            npm install --save
      - run:
          name: Run Unit Tests
          command: |
            ./node_modules/mocha/bin/mocha test/ --reporter mochawesome --reporter-options reportDir=test-results,reportFilename=test-results
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  vault_auth:
    docker:
      - image: joatmon08/circleci-gcp-agent:287.0-1.14.72
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Super-Linter
          uses: github/super-linter@v3.14.0
      - run:
          command: |
            export TAG=0.1.${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME
            echo $VAULT_ROLE_ID > vault/role-id
            echo $VAULT_SECRET_ID	> vault/secret-id
            DOCKER_LOGIN=$(vault kv get -field=usr secret2/foo3)
            DOCKER_PWD=$(vault kv get -field=pwd secret2/foo4)
            docker build -t $DOCKER_LOGIN/$IMAGE_NAME -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$IMAGE_NAME
      - persist_to_workspace:
          root: /tmp
          paths:
            - "*"
  deploy_to_k8s:
    docker:
      - image: joatmon08/circleci-gcp-agent:287.0-1.14.72
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Authenticate to GCP
          command: |
            gcloud auth activate-service-account $(cat /tmp/kubernetes-email) --key-file=/tmp/service-account
            gcloud config set project $(cat /tmp/gcp-project)
            gcloud container clusters get-credentials $(cat /tmp/kubernetes-cluster) --zone $(cat /tmp/kubernetes-cluster-zone)
      - run:
          name: Deploy to Kubernetes
          command: |
            cd kubernetes
            export TF_CLI_CONFIG_FILE=/tmp/.terraformrc
            terraform init
            terraform apply -auto-approve
  destroy_k8s:
    docker:
        - image: joatmon08/circleci-gcp-agent:287.0-1.14.72
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Authenticate to GCP
          command: |
            gcloud auth activate-service-account $(cat /tmp/kubernetes-email) --key-file=/tmp/service-account
            gcloud config set project $(cat /tmp/gcp-project)
            gcloud container clusters get-credentials $(cat /tmp/kubernetes-cluster) --zone $(cat /tmp/kubernetes-cluster-zone)
      - run:
          name: Deploy to Kubernetes
          command: |
            cd kubernetes
            export TF_CLI_CONFIG_FILE=/tmp/.terraformrc
            terraform init
            terraform destroy -auto-approve
workflows:
  version: 2
  build_test:
    jobs:
#      - run_tests
      - vault_auth
#      - deploy_to_k8s:
#         requires:
#           - vault_auth
#      - approve_destroy:
#         type: approval
#         requires:
#           - deploy_to_k8s
#      - destroy_k8s:
#         requires:
#           - approve_destroy
           
